local View = require("system.view")
local backpack_equipment_main_view = class("backpack_equipment_main_view", View)

function backpack_equipment_main_view:doInit(param)
    self.m_ui_manager = app:get_ui_manager()
    self.m_frame = self:getFrame()
    ----是否需要移动
    self.m_need_move = false
    ----移动速度
    self.m_move_speed = 0
    ----移动时间
    self.m_move_time = 0.2
    ---滑动条的值
    self.m_scroll_bar_target_value = 0
    self.m_target_btn = nil
    self.m_btn_list = {}

    self:load("UI/EquipmentBackpack.prefab", function(go)
        self.m_ui_manager:AdaptResolution(self:getFrame():getFrameName(), go)
        local return_btn = go.transform:Find("equipment_bg/return_btn"):GetComponent(UI.Button)
        local down_bg = go.transform:Find("equipment_bg/down_bg").transform
        self.m_scroll_bar = down_bg:Find("scrollbar"):GetComponent(UI.Scrollbar)
        self.m_drag_area_container = go.transform:Find("equipment_bg/drag_panel").gameObject:GetComponent("DragSkill")

        ----这里是背包的挂点
        local backpack_parent = self.m_drag_area_container.transform:Find("drag_area_container/backpack_container/backpack_parent").transform

        ----装备挂点
        local equipment = self.m_drag_area_container.transform:Find("drag_area_container/backpack_container/equipment").transform

        ----tips挂点
        local equipment_tips = self.m_drag_area_container.transform:Find("drag_area_container/backpack_container/equipment_tips").transform

        ---属性
        self.m_attribute_root = down_bg:Find("btn_container/attribute").transform
        self.m_attribute_image = self.m_attribute_root:Find("attribute_image").transform
        self.m_attribute_text_btn = self.m_attribute_image:Find("attribute_text_btn"):GetComponent(UI.Button)
        self.m_attribute_selected = self.m_attribute_root:Find("selected").transform
        self:add_btn_list(self.m_attribute_root, self.m_attribute_image, self.m_attribute_text_btn, self.m_attribute_selected)

        ---背包
        self.m_backpack_root = down_bg:Find("btn_container/backpack").transform
        self.m_backpack_image = self.m_backpack_root:Find("backpack_image").transform
        self.m_backpack_text_btn = self.m_backpack_image:Find("backpack_text_btn"):GetComponent(UI.Button)
        self.m_backpack_selected = self.m_backpack_root:Find("selected").transform
        self:add_btn_list(self.m_backpack_root, self.m_backpack_image, self.m_backpack_text_btn, self.m_backpack_selected)

        ---仓库
        self.m_warehouse_root = down_bg:Find("btn_container/warehouse").transform
        self.m_warehouse_image = self.m_warehouse_root:Find("warehouse_image").transform
        self.m_warehouse_text_btn = self.m_warehouse_image:Find("warehouse_text_btn"):GetComponent(UI.Button)
        self.m_warehouse_selected = self.m_warehouse_root:Find("selected").transform
        self:add_btn_list(self.m_warehouse_root, self.m_warehouse_image, self.m_warehouse_text_btn, self.m_warehouse_selected)

        self.m_drag_area_container.onBeginDrag = DragSkill_OnBeginDragHandler()
        self.m_drag_area_container.onBeginDrag:AddListener(function()
            self.m_need_move = false
        end)

        self.m_drag_area_container.onEndDrag = DragSkill_OnEndDragHandler()
        self.m_drag_area_container.onEndDrag:AddListener(function()
            self:end_drag_callback()
        end)

        self.m_attribute_text_btn.onClick:AddListener(function()
            self.m_scroll_bar_target_value = 0
            self:click_btn_callback(self.m_attribute_text_btn)
        end)

        self.m_backpack_text_btn.onClick:AddListener(function()
            self.m_scroll_bar_target_value = 0.5
            self:click_btn_callback(self.m_backpack_text_btn)
        end)

        self.m_warehouse_text_btn.onClick:AddListener(function()
            self.m_scroll_bar_target_value = 1
            self:click_btn_callback(self.m_warehouse_text_btn)
        end)

        return_btn.onClick:AddListener(function()
            self.m_mgr:getView("backpack_equipment_main"):getGO():SetActive(false)
        end)

        self.m_scroll_bar_target_value = 0.5
        self.m_target_btn = self.m_backpack_text_btn
        self:click_btn_callback(self.m_target_btn)

        self:subscribe(self.m_frame:on_event("child_created"), function(child_frame)
            local name = child_frame:getFrameName()
            local param = child_frame:getParam()
            if string.find(name, "backpack_list") then
                local view = self.m_mgr:getView(name)
                local view_go = view:getGO()
                --选择创建挂点以及设置位置和大小
                local parent_transform = backpack_parent.transform
                view_go.transform.parent = parent_transform
                view_go.transform.localPosition = Vector3.zero
                view_go.transform.localScale = Vector3.one
            end
            ----装备
            if string.find(name, "equipment_list") then
                local view = self.m_mgr:getView(name)
                local view_go = view:getGO()
                --选择创建挂点以及设置位置和大小
                local parent_transform = equipment.transform
                view_go.transform.parent = parent_transform
                view_go.transform.localPosition = Vector3.zero
                view_go.transform.localScale = Vector3.one
            end
            ------装备tips
            if string.find(name, "equipment_tips_parent") then
                local view = self.m_mgr:getView(name)
                local view_go = view:getGO()
                local parent_transform = equipment_tips.transform
                view_go.transform.parent = parent_transform
                view_go.transform.localPosition = Vector3.zero
                view_go.transform.localScale = Vector3.one
            end
        end)
        self.m_mgr:getView("backpack_equipment_main"):getGO():SetActive(false)
        self.m_frame:on_loaded()
    end)
end

function backpack_equipment_main_view:doUpdate()
    if self.m_need_move then
        if (math.abs(self.m_scroll_bar.value - self.m_scroll_bar_target_value) < 0.01) then
            self.m_scroll_bar.value = self.m_scroll_bar_target_value
            self.m_need_move = false
            return
        end
        ----在unity中有一个返回值，但是函数的参数有应用类型的参数，所以将引用类型的那个参数作为返回值返回，故有两个参数
        local smoothed_val, move_speed = Mathf.SmoothDamp(self.m_scroll_bar.value, self.m_scroll_bar_target_value, self.m_move_speed, self.m_move_time)
        self.m_scroll_bar.value = smoothed_val
        self.m_move_speed = move_speed
    end
end

------结束拖拽的回调
function backpack_equipment_main_view:end_drag_callback()
    if self.m_scroll_bar.value <= 0.25 then
        self.m_scroll_bar_target_value = 0
        self.m_target_btn = self.m_attribute_text_btn
    elseif self.m_scroll_bar.value <= 0.75 then
        self.m_scroll_bar_target_value = 0.5
        self.m_target_btn = self.m_backpack_text_btn
    else
        self.m_scroll_bar_target_value = 1
        self.m_target_btn = self.m_warehouse_text_btn
    end
    self:click_btn_callback(self.m_target_btn)
end

---确定了目标位置的回调
function backpack_equipment_main_view:click_btn_callback(press_btn)
    self:change_btn_to_big(press_btn)
    self.m_need_move = true
    self.m_move_speed = 0
end

-----按钮变大
function backpack_equipment_main_view:change_btn_to_big(press_btn)
    for k, v in pairs(self.m_btn_list) do
        if v["btn_and_text"] == press_btn then
            v["root"].transform:GetComponent(RectTransform).sizeDelta = Vector2(200, 95)
            v["selected_show"].transform.gameObject:SetActive(true)
            v["btn_no_selected"].transform.gameObject:SetActive(false)
        else
            v["root"].transform:GetComponent(RectTransform).sizeDelta = Vector2(100, 90)
            v["selected_show"].transform.gameObject:SetActive(false)
            v["btn_no_selected"].transform.gameObject:SetActive(true)
        end
    end
end

-----向按钮列表中添加内容
function backpack_equipment_main_view:add_btn_list(root, btn_no_selected, btn_and_text, selected_show)
    self.m_btn_list[#self.m_btn_list + 1] = { ["root"] = root, ["btn_no_selected"] = btn_no_selected, ["btn_and_text"] = btn_and_text, ["selected_show"] = selected_show }
end

return backpack_equipment_main_view