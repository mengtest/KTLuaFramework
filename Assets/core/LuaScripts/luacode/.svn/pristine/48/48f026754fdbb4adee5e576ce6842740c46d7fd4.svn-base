
local Util_table = {}

-- 以值为索引移除表中的元素
-- tbl(table):待移除制定元素的表
-- val(anything):待移除的制定元素
-- return (bool):是否成功删除val
function Util_table:remove_by_val(tbl, val)
	for k,v in pairs(tbl) do
		if v == val then
			table.remove(tbl, k)
            return true
		end
	end
    return false
end

-- 将tbl_in中的所有元素尾插入到tbl_out中(tbl_out和tbl_in必须都是有序列表，如果对字典型数据使用将会丢失信息)
-- tbl_out(table)
-- tbl_in(table)
function Util_table:insert_range(tbl_out, tbl_in)
	if tbl_out and tbl_in and type(tbl_out) == "table" and type(tbl_in) == "table" then
		for k,v in ipairs(tbl_in) do
			table.insert(tbl_out, v)
		end
	else
		print("请传入有效的参数数据")
	end
end

-- 判断字典型table中是否存在val
-- tbl(table):
-- val(anything):
function Util_table:is_contain(tbl, val)
    for k, v in pairs(tbl) do
        if v == val then
            return true
        end
    end
    return false
end

-- 获取tbl的元素总个数
function Util_table:count(tbl)
    local count = 0
    for k, v in pairs(tbl) do
        count = v ~= nil and count + 1 or count
    end
    return count
end


return Util_table