local View = require("system.view")
local spirit_strengthen_view = class("spirit_strengthen_view", View)

function spirit_strengthen_view:doInit()

    self.m_ui_manager = app:get_ui_manager()
    local frame = self:getFrame()
    ----是否需要移动
    self.m_need_move = false
    ----移动速度
    self.m_move_speed = 0
    ----移动时间
    self.m_move_time = 0.2
    ---滑动条的值
    self.m_scroll_bar_target_value = 0
    self.m_target_btn = nil
    self.m_btn_list = {}
    self:load(app:getAssetPathMgr().get_ui_view_asset("SpiritDevelop"), function(go)
        --self.m_ui_manager:AdaptResolution(self:getFrame():getFrameName(), go)
        go.transform.localPosition = Vector3.zero
        go.transform.localScale = Vector3.one
        ---- TODO 不知道为什么  创建出来的go大小并不是1600 900 的
        go.transform.sizeDelta = Vector2(1600, 900)

        -- 升级和融灵 view 的父节点
        self.m_child_root = self["content_gameObject"].transform
        -- 滑块
        self.m_slider = self["slider_gameObject"].transform
        self.m_scroll_bar = self["scrollbar_GUIScrollbar"]
        self.m_drag_root = self["drag_root_gameObject"]:GetComponent("DragSkill")
        -- 升级按钮
        self.m_upgrade_btn = self["upgrade_layer_GUIButton"].transform
        -- 升级高亮
        self.m_hl_upgrade = self["high_light_upgrade_gameObject"].transform
        local upgrade_pos_y = -303.5
        self:add_btn_list(self.m_upgrade_btn, self.m_hl_upgrade, upgrade_pos_y)
        -- 融灵按钮
        self.m_merge_btn = self["merge_layer_GUIButton"].transform
        -- 融灵高亮
        self.m_hl_merge = self["high_light_merge_gameObject"].transform
        local merge_pos_y = -413.9
        self:add_btn_list(self.m_merge_btn, self.m_hl_merge, merge_pos_y)
        self.m_drag_root.onBeginDrag = DragSkill_OnBeginDragHandler()
        self.m_drag_root.onBeginDrag:AddListener(function()
            self.m_need_move = false
        end)

        self.m_drag_root.onEndDrag = DragSkill_OnEndDragHandler()
        self.m_drag_root.onEndDrag:AddListener(function()
            self:end_drag_callback()
        end)

        self:subscribe(self:getFrame():on_event("child_created"), function(child_frame)
            local name = child_frame:getFrameName()
            -- 升级
            if string.find(name, "spirit_upgrade") then
                local view = self.m_mgr:getView(name)
                local view_go = view:getGO()
                --选择创建挂点以及设置位置和大小
                local parent_transform = self.m_child_root
                view_go.transform.parent = parent_transform
                view_go.transform.localPosition = Vector3.zero
                view_go.transform.localScale = Vector3.one
                view_go.transform.sizeDelta = Vector2(610, 715)

            end
            -- 融灵
            if string.find(name, "spirit_merge") then
                local view = self.m_mgr:getView(name)
                local view_go = view:getGO()
                --选择创建挂点以及设置位置和大小
                local parent_transform = self.m_child_root
                view_go.transform.parent = parent_transform
                view_go.transform.localPosition = Vector3.zero
                view_go.transform.localScale = Vector3.one
                view_go.transform.sizeDelta = Vector2(610, 715)
            end
        end)
        -- 升级分页
        self:subscribe(frame:on_event("on_upgrade_layer"), function()
            self.m_scroll_bar_target_value = 1
            self:click_btn_callback(self.m_upgrade_btn)
        end)
        -- 融灵分页
        self:subscribe(frame:on_event("on_merge_layer"), function()
            self.m_scroll_bar_target_value = 0
            self:click_btn_callback(self.m_merge_btn)
        end )

        -- 显示
        self:subscribe(frame:on_event("show"), function()
            self:show()
        end)
        -- 隐藏
        self:subscribe(frame:on_event("hide"), function()
            self:hide()
        end )
        -------------
        frame:on_loaded()
        self:hide()
    end)
end


---确定了目标位置的回调
function spirit_strengthen_view:click_btn_callback(press_btn)
    self:change_btn_to_big(press_btn)
    self.m_need_move = true
    self.m_move_speed = 0
end
-----按钮变大
function spirit_strengthen_view:change_btn_to_big(press_btn)
    for k, v in pairs(self.m_btn_list) do
        if v["btn_no_selected"] == press_btn then
            v["btn_no_selected"].transform.gameObject:SetActive(false)
            v["btn_and_text"].transform.gameObject:SetActive(true)
            self:btn_selected_bg_move(v["target"])
        else
            v["btn_and_text"].transform.gameObject:SetActive(false)
            v["btn_no_selected"].transform.gameObject:SetActive(true)
        end
    end
end
-----向按钮列表中添加内容
function spirit_strengthen_view:add_btn_list( btn_no_selected, btn_and_text, target)
    self.m_btn_list[#self.m_btn_list + 1] = { ["btn_no_selected"] = btn_no_selected, ["btn_and_text"] = btn_and_text, ["target"] = target }
end
function spirit_strengthen_view:end_drag_callback()
    if self.m_scroll_bar.value <= 0.5 then
        self.m_scroll_bar_target_value = 0
        self.m_target_btn = self.m_merge_btn
    else
        self.m_scroll_bar_target_value = 1
        self.m_target_btn = self.m_upgrade_btn

    end
    self:click_btn_callback(self.m_target_btn)
end

function spirit_strengthen_view:doUpdate()
    if self.m_need_move then
        if (math.abs(self.m_scroll_bar.value - self.m_scroll_bar_target_value) < 0.01) then
            self.m_scroll_bar.value = self.m_scroll_bar_target_value
            self.m_need_move = false
            return
        end
        ----在unity中有一个返回值，但是函数的参数有应用类型的参数，所以将引用类型的那个参数作为返回值返回，故有两个参数
        local smoothed_val, move_speed = Mathf.SmoothDamp(self.m_scroll_bar.value, self.m_scroll_bar_target_value, self.m_move_speed, self.m_move_time)
        self.m_scroll_bar.value = smoothed_val
        self.m_move_speed = move_speed
    end
end
function spirit_strengthen_view:btn_selected_bg_move(target)
    ShortcutExtensions.DOLocalMoveY(self.m_slider.transform, target, 0.6, false)
end
---- 显示自己
function spirit_strengthen_view:show()
    self:getGO():SetActive(true)
end
---- 隐藏自己
function spirit_strengthen_view:hide()
    self:getGO():SetActive(false)
end
-- 返回 我是否已经被打开
function spirit_strengthen_view:get_strengthen_is_active()
    return self:getGO().activeSelf
end

return spirit_strengthen_view