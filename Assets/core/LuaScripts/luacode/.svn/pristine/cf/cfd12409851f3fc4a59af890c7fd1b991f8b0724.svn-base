local View = require("system.view")
local skill_ui_setting_list_btn_view = class("skill_ui_setting_list_btn", View)



function skill_ui_setting_list_btn_view:doInit(param)

    self.m_on_beign_drag_handler = nil    -- 外部回调 开始拖动
    self.m_on_drag_handler = nil        -- 外部回调 拖动
    self.m_on_end_drag_handler = nil        -- 外部回调 结束拖动


    self.m_on_pointer_click_handler = nil   -- 外部回调 点击技能按钮

    self:loadRes()
end


function skill_ui_setting_list_btn_view:set_on_beign_drag_handler(func)
    assert(type(func) == "function")
    self.m_on_beign_drag_handler = func
end

function skill_ui_setting_list_btn_view:set_on_drag_handler(func)
    assert(type(func) == "function")
    self.m_on_drag_handler = func
end

function skill_ui_setting_list_btn_view:set_on_end_drag_handler(func)
    assert(type(func) == "function")
    self.m_on_end_drag_handler = func
end

function skill_ui_setting_list_btn_view:set_on_pointer_click_handler(func)
    assert(type(func) == "function")
    self.m_on_pointer_click_handler = func
end

function skill_ui_setting_list_btn_view:get_icon()
    return self.m_icon_image
end

function skill_ui_setting_list_btn_view:loadRes()


    self:load_prefab("ui/SkillSettingList.prefab", function(loaded_go)
        self.m_res_loaded = true

        -- 从模板clone对象
        local template_go = loaded_go.transform:Find("skill").gameObject
        local go = Object.Instantiate(template_go)

        self:getGO():AddComponent(RectTransform)

        go.transform:SetParent(self:getGO().transform)
        go.transform.localPosition = Vector3(0, 0, 0)
        go.transform.localScale = Vector3.one
        self:initOutlet(go, self:getFrame())

        local go_trsf = go.transform
        go:SetActive(true)
        local frame = self:getFrame()


        -- 获取组件
        local icon_image = go_trsf:Find("icon").gameObject:GetComponent(UI.Image)
        self.m_icon_image = icon_image
        local cur_level_text = go_trsf:Find("stat/cur_level").gameObject:GetComponent(UI.Text)
        self.m_cur_level_text = cur_level_text
        local drag_skill = go:GetComponent("DragSkill")

        --交互事件 --
        -- 点击技能按钮
        drag_skill.onClick = DragSkill_OnPointerClickHandler()
        drag_skill.onClick:AddListener(function()
            if self.m_on_pointer_click_handler ~= nil then
                self.m_on_pointer_click_handler(self)
            end
        end)

        --开始拖拽
        drag_skill.onBeginDrag = DragSkill_OnBeginDragHandler()
        drag_skill.onBeginDrag:AddListener(function(event_data)
            if self.m_on_beign_drag_handler ~= nil then
                self.m_on_beign_drag_handler(self, event_data)
            end
        end)

        --拖拽ing
        drag_skill.onDrag = DragSkill_OnDragHandler()
        drag_skill.onDrag:AddListener(function(event_data)
            if self.m_on_drag_handler ~= nil then
                self.m_on_drag_handler(event_data)
            end
        end)

        -- 结束拖拽
        drag_skill.onEndDrag = DragSkill_OnEndDragHandler()
        drag_skill.onEndDrag:AddListener(function(event_data)
            if self.m_on_end_drag_handler ~= nil then
                self.m_on_end_drag_handler(event_data)
            end
        end)


        self:subscribe(frame:on_event_cur_level_set(true), function(cur_level)
            cur_level_text.text = tostring(cur_level)
        end)


        -- 技能模板
        self:subscribe(frame:on_event_skill_id_set(true), function(val)
            if val == 0 then
                return
            end
            local client_cfg = frame:get_client_cfg()
            -- 绘制图标
            local icon_path = client_cfg.icon
            self:subscribe(app:getResMgr():rxLoad(icon_path), function(asset_ref)
                --print("-------------", asset_ref.asset)
                local tex = asset_ref.asset
                if (tex == nil) then
                    Debug.LogError("找不到这个icon啊---->" .. icon_path)
                else
                    icon_image.sprite = Sprite.Create(tex, Rect(0, 0, tex.width, tex.height), Vector2(0.5, 0.5))
                end
            end)
        end)

    end)
end

return skill_ui_setting_list_btn_view