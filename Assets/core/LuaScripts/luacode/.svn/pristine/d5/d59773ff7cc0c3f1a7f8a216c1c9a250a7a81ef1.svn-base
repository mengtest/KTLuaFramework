local Frame = require("system.frame")
local backpack_sub_list = class("backpack_sub_list", Frame)

function backpack_sub_list:doInit(param)
    self:set_is_dont_create_go_automatic(true)
    self.m_list = {}
    self.m_item_list = {}
    self.m_temp_list = { ["unique"] = 0, ["tmpl"] = 0, ["bound"] = 0, ["level"] = 0 }
    self:on_init(param)
end

function backpack_sub_list:on_loaded()
    --背包item   temp
    for i = 1, 20 do
        local send = { self.m_name, i }
        if self.m_list[i] ~= nil then
            send[3] = self.m_list[i]
        else
            send[3] = { ["unique"] = 0, ["tmpl"] = 0, ["bound"] = 0, ["level"] = 0 }
        end
        self.m_item_list[i] = self:createChild(self.m_name .. "_item_" .. i, "%subsystem/backpack_equipment/backpack_item", send)
    end
end

------刷新数据   这里的list会传入3个参数   第一个是sublist数据   第二个是page_index  第三个是本页是否为末页 1表示末页
function backpack_sub_list:on_refresh(list, index, parma)
    self.m_list = nil
    self.m_list = {}
    local rec_list = list
    if index == 1 then
        if parma == 1 then
            for i = 1, #rec_list do
                self.m_list[#self.m_list + 1] = rec_list[i]
            end
        else
            local begin_index = #rec_list - index * 20 + 1
            for i = begin_index, #rec_list do
                self.m_list[#self.m_list + 1] = rec_list[i]
            end
        end
    else
        local begin_index = index * 20 + 1
        local end_index = begin_index + 20
        for i = begin_index, end_index do
            self.m_list[#self.m_list + 1] = rec_list[i]
        end
    end
    self:refresh_sub_item()
end

------当刷新列表之后同时要刷新背包的item   参数应该只有一个wearable就ok
function backpack_sub_list:refresh_sub_item()
    for i = 1, #self.m_list do
        self.m_item_list[i]:change_item(self.m_list[i])
    end
    for i = #self.m_list + 1, #self.m_item_list do
        self.m_item_list[i]:change_item(self.m_temp_list)
    end
end

------通过传入的参数来设置当前page的list数据
function backpack_sub_list:on_init(list)
    -----1代表这个是当前类型的最后一个page
    if list[2] == 1 then
        self.m_name = "weapon" .. list[3]
    elseif list[2] == 2 then
        self.m_name = "armor" .. list[3]
    elseif list[2] == 3 then
        self.m_name = "ring" .. list[3]
    end
    local rec_list = list[1]
    if list[4] == 1 then
        if list[3] == 1 then
            for i = 1, #rec_list do
                self.m_list[#self.m_list + 1] = rec_list[i]
            end
        else
            local begin_index = #rec_list - list[3] * 20 + 1
            for i = begin_index, #rec_list do
                self.m_list[#self.m_list + 1] = rec_list[i]
            end
        end
    else
        local begin_index = list[3] * 20 + 1
        local end_index = begin_index + 20
        for i = begin_index, end_index do
            self.m_list[#self.m_list + 1] = rec_list[i]
        end
    end
end

return backpack_sub_list