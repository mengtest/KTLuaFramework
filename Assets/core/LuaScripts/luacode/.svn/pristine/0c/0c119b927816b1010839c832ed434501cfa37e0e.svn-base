local View = require("system.view")
local equipment_tips_parent_view = class("equipment_tips_parent_view", View)

function equipment_tips_parent_view:doInit(params)
    self.m_ui_manager = app:get_ui_manager()
    --装备栏的view
    self.m_equipment_list_frame = self:getFrame("equipment_list")
    --创建tips用到的参数
    self.m_param_list = {}
    --当同一类型装备身上有两件时使用，标记第二件装备等级是否比背包装备高 0-低  1-相等  2-高
    self.m_second_equip_level_high = 0

    self.m_top_height = params['top_height']
    self.m_bottem_height = params['bottem_height']

    self:load("ui/EquipmentTipsParent.prefab", function(go)
        --self.m_ui_manager:AdaptResolution(self:getFrame():getFrameName(), go)

        go.transform.localPosition = Vector3.zero
        go.transform.localScale = Vector3.one
        self.m_equipment_tips_parent = go.transform:Find("equipment_tips_parent").gameObject:GetComponent("DragSkill")
        self.m_tips_left = go.transform:Find("tips_left")
        self.m_tips_right = go.transform:Find("tips_right")

        self.m_equipment_tips_parent.onClick = DragSkill_OnPointerClickHandler()
        self.m_equipment_tips_parent.onClick:AddListener(function()
            self:close_tips()
        end)
        self.m_equipment_tips_parent.gameObject:SetActive(false)

        self:subscribe(self.m_frame:on_event("child_created"), function(child_frame)
            local param = child_frame:getParam()
            local name = child_frame:getFrameName()
            local view = self.m_mgr:getView(name)
            local view_go = view:getGO()
            view_go:AddComponent(UnityEngine.RectTransform)
            view_go.transform.parent = param['parent']
            --print(param['parent']:Find("point").localPosition)
            view_go.transform.localPosition = param['parent']:Find("point").localPosition
            view_go.transform.localScale = Vector3.one
        end)
        self:init_tips_param_list()
        self:getFrame():onload(self.m_param_list)
    end)

    ------响应点击背包装备事件
    self:subscribe(self.m_equipment_list_frame:on_event("equip_info_list"), function(equip_list, obj, bright_image)
        self:init_equipment_tips(equip_list)
        self.m_bag_select_obj = {}
        self.m_bag_select_obj['obj'] = obj
        self.m_bag_select_obj['bright_image'] = bright_image
    end)
    ------响应点击装备栏装备事件
    self:subscribe(self.m_equipment_list_frame:on_event("equip_info"), function(equip_list, equip_type, selected_show_obj, light)
        self:click_equip_call_back(equip_list, equip_type)
        self.m_equip_select_obj = {}
        self.m_equip_select_obj['selected_show_obj'] = selected_show_obj
        self.m_equip_select_obj['light'] = light
    end)
end

------初始化预创建tips时需要的参数列表
function equipment_tips_parent_view:init_tips_param_list()
    for i = 1, 2 do
        if i == 1 then
            local params = {}
            params['parent'] = self.m_tips_right
            params['max_height'] = Screen.height - self.m_top_height - self.m_bottem_height
            self.m_param_list['bag'] = params
        else
            local params = {}
            params['parent'] = self.m_tips_left
            params['max_height'] = Screen.height - self.m_top_height - self.m_bottem_height
            self.m_param_list['equip'] = params
        end
    end
end

function equipment_tips_parent_view:click_equip_call_back(equip_list, equip_type)
    self.m_child_frame_list = self:getFrame():get_child_frame_list()
    self.m_equipment_tips_parent.gameObject:SetActive(true)
    for k, v in pairs(equip_list) do
        self.m_param_list['equip']['param'] = v
        self.m_param_list['equip']['need_show_button'] = 2
        self.m_param_list['equip']['is_equip'] = true
        self.m_param_list['equip']['second_equip'] = nil
        self.m_param_list['equip']['level_high'] = nil
    end
    self.m_tips_left.gameObject:SetActive(true)
    self.m_child_frame_list.equip:refresh_view(self.m_param_list['equip'], equip_type)
end

------加载装备tips
function equipment_tips_parent_view:init_equipment_tips(param)
    --自己维护的表，为了记录传来的参数数量有多少， temp
    local list = {}
    --标记装备位上是否有两件装备
    local has_second_equip = false
    for k, v in pairs(param) do
        if string.find(k, "bag") then
            list[1] = v['lvl']
        elseif string.find(k, "equip1") then
            list[2] = v['lvl']
        else
            list[3] = v['lvl']
        end
    end
    self.m_param_mgr = {}
    self.m_child_frame_list = self:getFrame():get_child_frame_list()
    --将承载tips的Panel显示
    self.m_equipment_tips_parent.gameObject:SetActive(true)
    for k, v in pairs(param) do
        if string.find(k, "bag") then
            self.m_param_list['bag']['param'] = v
            self.m_param_mgr['bag'] = v
            self.m_param_list['bag']['need_show_button'] = 1
            if #list > 1 then
                if list[1] < list[2] then
                    self.m_param_list['bag']['level_high'] = 0
                elseif list[1] == list[2] then
                    self.m_param_list['bag']['level_high'] = 1
                else
                    self.m_param_list['bag']['level_high'] = 2
                end
            end
            self.m_param_mgr['bag_level_high'] = self.m_param_list['bag']['level_high']
            self.m_tips_right.gameObject:SetActive(true)
            self.m_child_frame_list.bag:refresh_view(self.m_param_list['bag'])
        elseif string.find(k, "equip1") then
            self.m_param_list['equip']['param'] = v
            self.m_param_mgr['equip1'] = v
            self.m_param_list['equip']['need_show_button'] = false
            self.m_param_list['equip']['is_equip'] = true
            if not has_second_equip then
                self.m_param_list['equip']['second_equip'] = nil
            end
            if list[2] < list[1] then
                self.m_param_list['equip']['level_high'] = 0
            elseif list[2] == list[1] then
                self.m_param_list['equip']['level_high'] = 1
            else
                self.m_param_list['equip']['level_high'] = 2
            end
            self.m_param_mgr['equip1_level_high'] = self.m_param_list['equip']['level_high']
            self.m_tips_left.gameObject:SetActive(true)
            self.m_child_frame_list.equip:refresh_view(self.m_param_list['equip'])
        else
            has_second_equip = true
            self.m_param_mgr['equip2'] = v
            self.m_param_list['equip']['second_equip'] = true
            if list[3] < list[1] then
                self.m_second_equip_level_high = 0
            elseif list[3] == list[1] then
                self.m_second_equip_level_high = 1
            else
                self.m_second_equip_level_high = 2
            end
            self.m_param_mgr['equip2_level_high'] = self.m_second_equip_level_high
        end
    end
end

function equipment_tips_parent_view:on_event_tips_btn_change(equip_index)
    if equip_index == 1 then
        local bag_param = self.m_param_list['bag']
        local equip_param = self.m_param_list['equip']
        bag_param['level_high'] = self.m_param_mgr['bag_level_high']
        equip_param['param'] = self.m_param_mgr['equip1']
        equip_param['level_high'] = self.m_param_mgr['equip1_level_high']
        self.m_child_frame_list['bag']:refresh_view(bag_param)

        self.m_child_frame_list['equip']:refresh_view(equip_param)
    elseif equip_index == 2 then
        local bag_param = self.m_param_list['bag']
        local equip_param = self.m_param_list['equip']
        --bag_param['level_high'] = self.m_param_mgr['bag_level_high']
        equip_param['level_high'] = self.m_param_mgr['equip2_level_high']
        equip_param['param'] = self.m_param_mgr['equip2']
        if self.m_second_equip_level_high == 0 then
            bag_param['level_high'] = 2
            equip_param['level_high'] = 0
        elseif self.m_second_equip_level_high == 1 then
            bag_param['level_high'] = 1
            equip_param['level_high'] = 1
        else
            bag_param['level_high'] = 0
            equip_param['level_high'] = 2
        end
        self.m_child_frame_list.bag:refresh_view(bag_param)
        self.m_child_frame_list.equip:refresh_view(equip_param)
    end
end

function equipment_tips_parent_view:close_tips()
    self.m_tips_left.gameObject:SetActive(false)
    self.m_tips_right.gameObject:SetActive(false)
    self.m_equipment_tips_parent.gameObject:SetActive(false)
    if self.m_bag_select_obj then
        for k, v in pairs(self.m_bag_select_obj) do
            if v then
                v:SetActive(false)
            end
        end
    end
    if self.m_equip_select_obj then
        for k, v in pairs(self.m_equip_select_obj) do
            if v then
                v:SetActive(false)
            end
        end
    end

end

return equipment_tips_parent_view