-- 吟唱特效
-- 假设吟唱特效总是挂在角色内部
local UnitAutoDesotroySfxView = {}

function UnitAutoDesotroySfxView:doInit()
    local frame = self:getFrame()
    local sfx_path = frame:get_sfx_path()

    
   

    local cache_sfx = app:get_cache_mgr():GetSfxCache(sfx_path)
    if (cache_sfx == nil) then
        self:load(sfx_path, function(go)
            self:handlePrefab(go)           
        end)
    else
        --print("cacheSfx loaded", sfx_path)
        local go = GameObject.Instantiate(cache_sfx)
        go.transform:SetParent(self:getGO().transform)
        self:handlePrefab(go)
    end
end

function UnitAutoDesotroySfxView:handlePrefab(go)
    if(self:getFrame():get_duration() ~= nil) then self.m_expire_time = Time.time + self:getFrame():get_duration()  end
    
    go.transform.localPosition = Vector3.zero
    go.transform.localEulerAngles = Vector3.zero
    self.m_particle_controll = go:GetComponent(KTParticleControll)
    if (self.m_particle_controll == nil) then
        self.m_particle_controll = go:AddComponent(KTParticleControll)
    end
end

function UnitAutoDesotroySfxView:doUpdate()
    if self.m_particle_controll == nil then
        return
    end
    if self.m_expire_time == nil then
        -- 有时进入doUpdate时，KTParticleControll还没有获得正确的TotalDuration值，要等
        if self.m_particle_controll.IsInited then
            self.m_expire_time = Time.time + self.m_particle_controll.TotalDuration
        end
    else
        if Time.time >= self.m_expire_time then
            --print("UnitAutoDesotroySfxView destroy", self:getFrame():getFrameName())
            local frame = self:getFrame()
            frame:destroySelf()
        end
    end
end


return UnitAutoDesotroySfxView
