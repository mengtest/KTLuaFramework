--[[
	打包DSL
--]]
local U = require 'common.util.underscore'
local M = {}

local _pkg_dict = {}
local _all_assets = {}

local function format_asset_path( path )
	return string.format('Assets/%s', path)
end

local function add_asset_to_pkg(pkg, asset)
	pkg[#pkg + 1] = asset
	_all_assets[asset] = true
end

local function pkg_add(pkg, ...)
	local assets = { ... }
	U.each(U.flatten(assets), function( asset )		
		add_asset_to_pkg(pkg, format_asset_path(asset))
	end)
end

local _pkg_base = {
	add = pkg_add
}

local function get_or_create_pkg( name )
	local pkg = _pkg_dict[name]
	if pkg then
		return pkg
	end

	pkg = setmetatable({}, {__index = _pkg_base})
	_pkg_dict[name] = pkg
	return pkg
end

function M.pkg( name, fn )
	fn(get_or_create_pkg(name))
end

function M.exist(asset_name)
	return _all_assets[asset_name] == true
end

function M.get_asset_bundle_builds()
	local result = {}
	for pkg_name, pkg in pairs(_pkg_dict) do
		result[#result + 1] = {
			asset_bundle_name = pkg_name,
			assets = pkg
		}
	end

	local file = io.open('d:/package_dump.txt', 'wb')
	file:write(dump(result))
	file:close()
	
	return result
end

return M