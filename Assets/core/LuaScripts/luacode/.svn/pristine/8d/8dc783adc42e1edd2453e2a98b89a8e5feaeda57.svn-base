
local Quest_condition_base = class("Quest_condition_base")

--子类必须重写
function Quest_condition_base:initialize(quest_id, index, quest_manager)
    local data = dbc.quest[quest_id]
    local index_str = tostring(index)

    local tp_param_name = string.format("finish%s_params", index_str)
    local aim_area_name = string.format("finish%s_area", index_str)
    local per_weight_name = string.format("finish%s_weight", index_str)
    local finish_desc_name = string.format("finish%s_desc", index_str)
    
    self.m_cur_param = 0
    self.m_tbl_params = data[tp_param_name]
    self.m_aim_param = data[tp_param_name][2]
    self.m_aim_area = data[aim_area_name]
    self.m_per_weight = data[per_weight_name]
    self.m_finish_desc = data[finish_desc_name]
    self.m_is_passed = false
    self.m_is_fail=false--by lijunfeng 2018/3/5 是否失败
    self.m_quest_manager = quest_manager
    
    self:on_initialize(quest_id, index, quest_manager)
end
-- 是否完成条件
function Quest_condition_base:is_finished()
    return self.m_is_passed
end

--by lijunfeng 2018/3/5 是否失败
function Quest_condition_base:is_fail()
    return self.m_is_fail
end

--由服务器端最终设置是否完成 done=0 表示通过
function Quest_condition_base:set_cur_param(cur_param)
    self.m_cur_param = cur_param["stats"][1] or -1
    self.m_is_passed = cur_param["done"] == enum.shared.QuestCond.NONE
    self.m_is_fail= cur_param["done"] <0--by lijunfeng 2018/3/5 是否失败
end

--获取当前进度
function Quest_condition_base:get_cur_weight()
    return self.m_cur_param * self.m_per_weight
end

--获取当前进度数字 by lijunfeng 2018/2/5
function Quest_condition_base:get_cur_param()
    return self.m_cur_param
end

function Quest_condition_base:get_aim_weight()
    utility.log:logError(utility.log.Mask.SJG_Quest, string.format("Quest_condition_base:get_aim_weight() self.m_aim_param = %s, self.m_per_weight = %s", tostring(self.m_aim_param), tostring(self.m_per_weight)))
    return self.m_aim_param * self.m_per_weight
end

--获取条件目标区域与主角的距离
function Quest_condition_base:get_aim_info()
    --local dis, dir = 65536, Vector3.forward
    if self.m_is_passed then
        return nil, nil
    end
    
    local dis, dir = nil, nil
    local world = self.m_quest_manager:getFrame("world")
    local area_data = world:get_area_data(self.m_aim_area[1], self.m_aim_area[2])
    if area_data then
        local own_pos = world:get_main_player():get_pos()
        local vec = (area_data.worldPosition - own_pos)
        dis = vec.magnitude
        dir = vec.normalized
    end
    return dis, dir
end

function Quest_condition_base:get_aim_area()
    return self.m_aim_area
end

function Quest_condition_base:get_finish_desc()
    return self.m_finish_desc
end

--清除所有相关数据 by lijunfeng 2018/2/6
function Quest_condition_base:clear()
    print("清理条件数据")
    self.m_cur_param = 0
    self.m_is_passed=false
    self.m_is_fail=false
end

return Quest_condition_base