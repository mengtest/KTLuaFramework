
local Quest_condition = require "subsystem.quest.quest_bar.quest_condition"

local Quest_detail = class("Quest_detail")

function Quest_detail:initialize(index)
    self.m_index = index
    self.m_out_go = nil
    self.m_go = nil
    self.m_rect = nil
    self.m_is_show = false
    self.m_something_go = nil
    self.m_nothing_go = nil
    self.m_schdule_text = nil
    self.m_arrow_self_tr = nil
    self.m_arrow_aim_tr = nil
    self.m_dis_text = nil
    --self.m_quest_id = nil
    self.m_quest_data = nil
    
    self.m_display_queue = {}
    self.m_linked_go_list = {}
    self.m_condition_dict = {}
end

function Quest_detail:destroy()
    self:on_del()
    self.m_quest_data = nil
end

function Quest_detail:set_go(go, quest_bar_view)
    self.m_out_go = go
    self.m_go = self.m_out_go.transform:Find("sidebar_quest_item").gameObject
    self.m_quest_bar_view = quest_bar_view
    self.m_rect = go:GetComponent(RectTransform)
    self.m_something_go = self.m_rect:Find("sidebar_quest_item/something").gameObject
    self.m_nothing_go = self.m_rect:Find("sidebar_quest_item/nothing").gameObject
    self.m_sfx_add_go = self.m_rect:Find("sidebar_quest_item/sfx_add").gameObject
    self.m_time_bar_go = self.m_rect:Find("sidebar_quest_item/something/quest_info/third_line").gameObject
    self.m_schdule_text = self.m_rect:Find("sidebar_quest_item/something/quest_info/second_line/schdule"):GetComponent(UnityEngine.UI.Text)
    self.m_arrow_self_tr = self.m_rect:Find("sidebar_quest_item/something/arrow_info/arrow/arrow_self")
    self.m_arrow_aim_tr = self.m_rect:Find("sidebar_quest_item/something/arrow_info/arrow/arrow_aim")
    self.m_dis_text = self.m_rect:Find("sidebar_quest_item/something/arrow_info/distance"):GetComponent(UnityEngine.UI.Text)
    
    local this = self
    self.m_nothing_go:GetComponent(KTButton).onPointerDown = function ()
        this:open_quest_ui_main(0)
    end
    self:hide()
end

function Quest_detail:set_quest_data(quest_data)
    self.m_quest_data = quest_data
    local this = self
    self.m_rect:Find("sidebar_quest_item/something/quest_info"):GetComponent(KTButton).onPointerDown = function ()
        this:open_quest_ui_main(quest_data:get_quest_id())
    end
    self:on_add()
end

function Quest_detail:reset_sibling_index(index)
    self.m_index = index
    self.m_rect:SetSiblingIndex(index)
end

function Quest_detail:open_quest_ui_main(clicked_quest_id)
    Util_log:logError(Util_log.Mask.SJG_Quest, "Quest_bar_view:open_quest_ui_main, clicked_quest_id = %s", tostring(clicked_quest_id))
    self.m_quest_bar_view:getFrame("quest_ui_main"):show(clicked_quest_id or 0)
end

function Quest_detail:show()
    local quest_id = self.m_quest_data:get_quest_id()
    self:set_const_info(dbc.quest[quest_id])
    self:refresh_schdule()
    
    Util_log:logError(Util_log.Mask.SJG_Quest, "Quest_detail:show, index = %s", tostring(self.m_index))
    self.m_go:SetActive(true)
    self.m_something_go:SetActive(true)
    self.m_nothing_go:SetActive(false)
    self.m_sfx_add_go:SetActive(false)
    self.m_sfx_add_go:SetActive(true)
    self.m_is_show = true
end

function Quest_detail:hide()
    Util_log:logError(Util_log.Mask.SJG_Quest, "Quest_detail:hide, index = %s", tostring(self.m_index))
    self.m_go:SetActive(self.m_index == 1)
    self.m_something_go:SetActive(false)
    self.m_nothing_go:SetActive(true)
    self.m_sfx_add_go:SetActive(false)
    self.m_is_show = false
end

function Quest_detail:get_is_show()
    return self.m_is_show
end

function Quest_detail:get_quest_data()
    return self.m_quest_data
end

-- TODO:: Move Method 2 quest_bar
function Quest_detail:on_add()
    --Event_system:dispatch_event(EVENT_QUEST_ADD_MAP_AREA, self.m_quest_data)
    self.m_quest_data:set_is_traced(true)
    self.m_quest_data:refresh_aim_area()
    Event_system:dispatch_event(EVENT_QUEST_ADD_TRACE, self.m_quest_data:get_quest_id())
end

-- TODO:: Move Method 2 quest_bar
function Quest_detail:on_del()
    --Event_system:dispatch_event(EVENT_QUEST_DEL_MAP_AREA, nil)
    self.m_quest_data:set_is_traced(false)
    self.m_quest_data:clear_aim_area()
    Event_system:dispatch_event(EVENT_QUEST_DEL_TRACE, self.m_quest_data:get_quest_id())
end

function Quest_detail:set_parent(parent_tr)
    self.m_rect.transform:SetParent(parent_tr)
    self.m_rect.localPosition = Vector3.zero
    self.m_rect.localScale = Vector3.one
    --self.m_rect.sizeDelta = Vector2(0, 0)
end

function Quest_detail:set_const_info(data)
    local title_text = self.m_rect:Find("sidebar_quest_item/something/quest_info/txt_title"):GetComponent(UnityEngine.UI.Text)
    local sketch_text = self.m_rect:Find("sidebar_quest_item/something/quest_info/second_line/txt_sketch"):GetComponent(UnityEngine.UI.Text)
    title_text.text = data.detail .. data.name
    sketch_text.text = data.sketchy
    for i = 1, 2 do
        local cur_good_id = data.goods[i]
        local cur_good_img = self.m_rect:Find(string.format("sidebar_quest_item/something/goods/good%d", i)):GetComponent(UnityEngine.UI.Image)
        if cur_good_id and cur_good_id > 0 then
            cur_good_img.gameObject:SetActive(true)
        else
            cur_good_img.gameObject:SetActive(false)
        end
        
        local is_timeout_existed = data.timeout and data.timeout ~= 0
        self.m_time_bar_go:SetActive(is_timeout_existed)
    end
end

function Quest_detail:refresh_schdule()
    self.m_schdule_text.text = string.format("(%d/%d)", self.m_quest_data:get_cur_weights(), self.m_quest_data:get_aim_weights())
end

function Quest_detail:refresh_aim_info(dis_aim, dir_aim, dir_self)
    if not dis_aim or not dir_aim then return end
    self.m_dis_text.text = string.format("%dm", math.floor(dis_aim) + 1)
    self.m_arrow_aim_tr.localEulerAngles = Vector3(0, 0, math.deg(math.atan2(dir_aim.z, dir_aim.x)) - 90)
    self.m_arrow_self_tr.localEulerAngles = Vector3(0, 0, -dir_self)
end

function Quest_detail:get_pos()
    --return self.m_go.transform.localToWorldMatrix:MultiplyPoint3x4(self.m_go.transform.localPosition)
    return self.m_out_go.transform.position
end

-- 添加根据先前已经设置好的数据刷新当前界面显示
-- replaced by "show()"
function Quest_detail:refresh_modify()
    
end

return Quest_detail