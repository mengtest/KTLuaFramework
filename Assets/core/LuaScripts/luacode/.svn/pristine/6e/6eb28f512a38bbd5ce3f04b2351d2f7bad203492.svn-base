---
--- Created by xjl.
--- DateTime: 2017/12/11 16:16
---
local LuaQueue = require("common.util.lua_queue")
local Frame = require("system.frame")
local float_hint = class("float_hint", Frame)


Attribute.decl(float_hint, "queue_size", 0)

function float_hint:doInit()
    self.m_float_queue = LuaQueue:new(20)
    self.m_flag_list = {}
    self.m_flag_list[3] = {["flag"] = false, ["offset_y"] = 30, ["end_y"] = 130, ["duration"] = 1.5}
    self.m_flag_list[2] = {["flag"] = false, ["offset_y"] = 60, ["end_y"] = 160, ["duration"] = 1.5}
    self.m_flag_list[1] = {["flag"] = false, ["offset_y"] = 90, ["end_y"] = 190, ["duration"] = 1.5}

    self:subscribe(self:on_event_queue_size_set(false), function()
        if self:get_queue_size() ~= 0 then
            for i = 1, 3 do
                if self.m_flag_list[i]["flag"] == false then
                    self.m_flag_list[i]["flag"] = true
                    local scroll_text = app:get_ui_manager():create_scroll_text({ ["offset_y"] = self.m_flag_list[i]["offset_y"], ["end_y"] = self.m_flag_list[i]["end_y"], ["duration"] = self.m_flag_list[i]["duration"] })
                    scroll_text:set_attr("msg", self.m_float_queue:popQueue())
                    self:set_attr("queue_size", self.m_float_queue:get_size())
                    slua_timer.addDelayEvent(self.m_flag_list[i]["duration"], function()
                        self.m_flag_list[i]["flag"] = false
                    end)
                    break
                end
            end
            if self.m_float_queue:get_size()~= 0 then
                slua_timer.addDelayEvent(1.5, function()
                    local scroll_text = app:get_ui_manager():create_scroll_text({ ["offset_y"] = self.m_flag_list[3]["offset_y"], ["end_y"] = self.m_flag_list[3]["end_y"], ["duration"] = self.m_flag_list[3]["duration"] })
                    scroll_text:set_attr("msg", self.m_float_queue:popQueue())
                    self:set_attr("queue_size", self.m_float_queue:get_size())
                end)
            end
        end
    end)
end

function float_hint:add_float(str)
    self.m_float_queue:pushQueue(str)
    self:set_attr("queue_size", self.m_float_queue:get_size())
end

return float_hint