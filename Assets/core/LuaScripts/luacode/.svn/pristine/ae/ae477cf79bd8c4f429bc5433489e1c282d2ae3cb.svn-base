local sect_info_compare_view = {}

function sect_info_compare_view:doInit()
    self.m_ui_manager = app:get_ui_manager()
    self.m_frame = self:getFrame()
    ----是否需要移动
    self.m_need_move = false
    ----移动速度
    self.m_move_speed = 0
    ----移动时间
    self.m_move_time = 0.2
    ---滑动条的值
    self.m_scroll_bar_target_value = 0
    ---滑动目标按钮
    self.m_target_btn = nil
    ---当前选中的按钮
    self.m_cur_btn = nil
    self.m_btn_list = {}
    ---记录开始滑动时select_bg的位置
    self.m_select_bg_start_x = -105


    self:load(app:getAssetPathMgr().get_ui_view_asset("SectInfoCompare"), function(go)

        self.m_ui_manager:AdaptResolution(self:getFrame():getFrameName(), go)
        self.m_scroll_bar = self["scrollbar_GUIScrollbar"]
        self.m_drag_area_container = self["drag_panel_gameObject"]:GetComponent("DragSkill")

        ---- 【下边】灵兽目标
        self.m_spirit_target_root = self["spirit_target_gameObject"].transform
        self.m_spirit_target_image = self["spirit_target_image_GUIImage"].gameObject.transform
        self.m_spirit_target_text_btn = self["spirit_target_btn_GUIButton"]
        self.m_spirit_target_selected = self["spirit_target_selected_gameObject"].transform
        local spirit_target_target_pos_x = 58
        self:add_btn_list(self.m_spirit_target_root, self.m_spirit_target_image, self.m_spirit_target_text_btn, self.m_spirit_target_selected, spirit_target_target_pos_x)

        --- 【下边】装备目标
        self.m_equipment_target_root = self["equipment_target_gameObject"].transform
        self.m_equipment_target_image = self["equipment_target_image_GUIImage"].gameObject.transform
        self.m_equipment_target_text_btn = self["equipment_target_btn_GUIButton"]
        self.m_equipment_target_selected = self["equipment_target_selected_gameObject"].transform
        local equipment_target_target_pos_x = -105
        self:add_btn_list(self.m_equipment_target_root, self.m_equipment_target_image, self.m_equipment_target_text_btn, self.m_equipment_target_selected, equipment_target_target_pos_x)
        self.m_btn_selected_bg = self["select_image_gameObject"].transform

        self.m_drag_area_container.onBeginDrag = DragSkill_OnBeginDragHandler()
        self.m_drag_area_container.onBeginDrag:AddListener(function()
            self.m_need_move = false
            self.m_select_bg_start_x = self.m_btn_selected_bg.localPosition.x
        end)

        self.m_drag_area_container.onDrag = DragSkill_OnDragHandler()
        self.m_drag_area_container.onDrag:AddListener(function()
            self:on_drag_select_bg_move()
        end)

        self.m_drag_area_container.onEndDrag = DragSkill_OnEndDragHandler()
        self.m_drag_area_container.onEndDrag:AddListener(function()
            self:end_drag_callback()
        end)

        self.m_scroll_bar_target_value = 0
        self.m_target_btn = self.m_equipment_target_text_btn
        self:click_btn_callback(self.m_target_btn)

        self:subscribe(self.m_frame:on_event("child_created"), function(child_frame)
            local name = child_frame:getFrameName()
            -- 装备目标
            if string.find(name, "sect_equipment_target") then
                local view = self.m_mgr:getView(name)
                local view_go = view:getGO()
                --选择创建挂点以及设置位置和大小
                view_go.transform.parent = self["target_list_root_gameObject"].transform
                view_go.transform.localPosition = Vector3.zero
                view_go.transform.localScale = Vector3.one
            end
            -- 装等详情
            if string.find(name, "sect_equipment_level_detail") then
                local view = self.m_mgr:getView(name)
                local view_go = view:getGO()
                --选择创建挂点以及设置位置和大小
                view_go.transform.parent = self["infos_root_gameObject"].transform
                view_go.transform.localPosition = Vector3.zero
                view_go.transform.localScale = Vector3.one
            end
            -- 词缀详情
            if string.find(name, "sect_equipment_affix_detail") then
                local view = self.m_mgr:getView(name)
                local view_go = view:getGO()
                --选择创建挂点以及设置位置和大小
                view_go.transform.parent = self["infos_root_gameObject"].transform
                view_go.transform.localPosition = Vector3.zero
                view_go.transform.localScale = Vector3.one
            end
            -- 套装详情
            if string.find(name, "sect_equipment_suit_detail") then
                local view = self.m_mgr:getView(name)
                local view_go = view:getGO()
                --选择创建挂点以及设置位置和大小
                view_go.transform.parent = self["infos_root_gameObject"].transform
                view_go.transform.localPosition = Vector3.zero
                view_go.transform.localScale = Vector3.one
            end
            -- 属性详情
            if string.find(name, "sect_equipment_property_detail") then
                local view = self.m_mgr:getView(name)
                local view_go = view:getGO()
                --选择创建挂点以及设置位置和大小
                view_go.transform.parent = self["infos_root_gameObject"].transform
                view_go.transform.localPosition = Vector3.zero
                view_go.transform.localScale = Vector3.one
            end
        end)

        -- 灵兽目标
        self:subscribe(self.m_frame:on_event("on_spirit_target_btn"), function()
            self.m_scroll_bar_target_value = 1
            self:click_btn_callback(self.m_spirit_target_text_btn)
        end)
        -- 装备目标
        self:subscribe(self.m_frame:on_event("on_equipment_target_btn"), function()
            self.m_scroll_bar_target_value = 0
            self:click_btn_callback(self.m_equipment_target_text_btn)
        end)


        -- 显示
        self:subscribe(self.m_frame:on_event("show"), function()
            self:show()
        end)
        -- 隐藏
        self:subscribe(self.m_frame:on_event("hide"), function()
            self:hide()
        end )
        self:hide()
        self.m_frame:on_loaded()
    end)
end

function sect_info_compare_view:doUpdate()
    if self.m_need_move then
        if (math.abs(self.m_scroll_bar.value - self.m_scroll_bar_target_value) < 0.01) then
            self.m_scroll_bar.value = self.m_scroll_bar_target_value
            self.m_need_move = false
            return
        end
        ----在unity中有一个返回值，但是函数的参数有应用类型的参数，所以将引用类型的那个参数作为返回值返回，故有两个参数
        local smoothed_val, move_speed = Mathf.SmoothDamp(self.m_scroll_bar.value, self.m_scroll_bar_target_value, self.m_move_speed, self.m_move_time)
        self.m_scroll_bar.value = smoothed_val
        self.m_move_speed = move_speed
    end
    self:on_drag_select_bg_move()
end

function sect_info_compare_view:on_drag_select_bg_move()
    if self.m_scroll_bar then
        local target_distance = self.m_scroll_bar.value - self.m_scroll_bar_target_value
        local pos = self.m_btn_selected_bg.localPosition
        self.m_btn_selected_bg.localPosition = Vector3(self.m_select_bg_start_x + 150 * target_distance, pos.y, pos.z)
    end
end

------结束拖拽的回调
function sect_info_compare_view:end_drag_callback()
    if self.m_scroll_bar.value < 0.5 then
        self.m_scroll_bar_target_value = 0
        self.m_target_btn = self.m_equipment_target_text_btn
    else
        self.m_scroll_bar_target_value = 1
        self.m_target_btn = self.m_spirit_target_text_btn
    end
    self:click_btn_callback(self.m_target_btn)
end

---确定了目标位置的回调
function sect_info_compare_view:click_btn_callback(press_btn)
    self:change_btn_to_big(press_btn)
    self.m_need_move = true
    self.m_move_speed = 0
    self.m_cur_btn = press_btn
end

-----按钮变大
function sect_info_compare_view:change_btn_to_big(press_btn)
    for k, v in pairs(self.m_btn_list) do
        if v["btn_and_text"] == press_btn then
            v["root"].transform:GetComponent(RectTransform).sizeDelta = Vector2(200, 95)
            v["selected_show"].transform.gameObject:SetActive(true)
            v["btn_no_selected"].transform.gameObject:SetActive(false)
            self.m_select_bg_start_x = v["target"]
        else
            v["root"].transform:GetComponent(RectTransform).sizeDelta = Vector2(100, 90)
            v["selected_show"].transform.gameObject:SetActive(false)
            v["btn_no_selected"].transform.gameObject:SetActive(true)
        end
    end
end

-----向按钮列表中添加内容
function sect_info_compare_view:add_btn_list(root, btn_no_selected, btn_and_text, selected_show, target)
    self.m_btn_list[#self.m_btn_list + 1] = { ["root"] = root, ["btn_no_selected"] = btn_no_selected, ["btn_and_text"] = btn_and_text, ["selected_show"] = selected_show, ["target"] = target }
end

---
function sect_info_compare_view:btn_selected_bg_move(target)
    local move_dis = math.abs(target - self.m_select_bg_start_x)
    local time = 0.6
    if move_dis > 0 then
        time = math.abs(target - self.m_btn_selected_bg.gameObject.transform.localPosition.x) / move_dis * 0.1
    end
    ShortcutExtensions.DOLocalMoveX(self.m_btn_selected_bg.gameObject.transform, target, time, false)
end

---- 显示自己
function sect_info_compare_view:show()
    self:getGO():SetActive(true)
end
---- 隐藏自己
function sect_info_compare_view:hide()
    self:getGO():SetActive(false)
end

return sect_info_compare_view