local Frame = require("system.frame")
local skill_ui_setting = class("skill_ui_setting", Frame)


Attribute.decl(skill_ui_setting, "source_skill_id", -1) -- 原技能id
Attribute.decl(skill_ui_setting, "target_skill_id", -1) -- 目标技能id
Attribute.decl(skill_ui_setting, "is_dropped", false) -- 扔下技能
Attribute.decl(skill_ui_setting, "is_created_skill_list", false) -- 是否已经创建了技能列表

Event.decl(skill_ui_setting, "skill_btn_on_click")  -- 技能按钮被点击事件
Event.decl(skill_ui_setting, "set_skill_id_list")  -- 配置好的技能id列表



function skill_ui_setting:doInit(param)

end

function skill_ui_setting:on_loaded()

    self.m_unit = self:getFrame("world"):get_main_player()
    -- pacman  2017-09-12
    -- 在没有角色技能管理系统之前，在此临时配置各职业的技能
    local rclass = self.m_unit:get_rclass()

    local skill_id_list = {}

    if rclass == SharedEnum.RoleClass.DEMON_HUNTER then
        -- 灵猴(战士)技能
        skill_id_list = { 912001, 912002, 912003, 912004, 912005, 912006, 912007, --面板1 按钮x7
            912008, 912009, 912010, 912001, 912001                              --面板1 按钮x5
        }

    elseif rclass == SharedEnum.RoleClass.MAGE then
        -- 罗刹(法师)技能
        skill_id_list = { 903001, 903002, 903003, 903004, 903005, 903006, 903007, --面板1 按钮x7
            903008, 903001, 903001, 903001, 903001                              --面板1 按钮x5
        }

    elseif rclass == SharedEnum.RoleClass.PRIEST or rclass == 0 then
        -- 镜童(法师)技能
        skill_id_list = { 906001, 906002, 906003, 906004, 906005, 906006, 906002, --面板1 按钮x7
            906007, 906001, 906002, 906003, 906003                              --面板1 按钮x5
        }

    else
        app:logError("!!!!!!!! invalid role type", type)
    end


    -- 创建技能按钮
    self.m_skill_btn_list = {}
    local skill_num = 0
    for i, v in ipairs(skill_id_list) do
        skill_num = skill_num + 1
        local skill_id = v
        local skill_btn = self:createChild("skill_ui_setting_btn" .. i, "%subsystem/skill_system_ui/skill_ui_setting_btn", skill_id)
        self.m_skill_btn_list[skill_num] = skill_btn
        --print(self.m_skill_btn_list[i]:get_skill_id())
    end
end

-- 创建技能列表
function skill_ui_setting:create_skill_list()
    self.skill_ui_setting_list = self:createChild("skill_ui_setting_list", "%subsystem/skill_system_ui/skill_ui_setting_list")
    return self.skill_ui_setting_list
end
-- 销毁技能列表
function skill_ui_setting:destroy_skill_list()
    self:destroyChild(self.skill_ui_setting_list)

end
-- 点击技能按钮并且记录所点击的技能frame
function skill_ui_setting:on_click_btn(btn_frame)
    self:emit_event("skill_btn_on_click", btn_frame)
end

-------------测试技能配置（与主界面同步）用的----------------------
-- 删除自己
function skill_ui_setting:destroy_myself()
    self:destroySelf()
end

function skill_ui_setting:set_skill_id_list(skill_id_list)
    self:emit_event("set_skill_id_list", skill_id_list)

end

function skill_ui_setting:get_skill_btn_list()
    return self.m_skill_btn_list
end
-------------测试（与主界面同步）用的----------------------

return skill_ui_setting