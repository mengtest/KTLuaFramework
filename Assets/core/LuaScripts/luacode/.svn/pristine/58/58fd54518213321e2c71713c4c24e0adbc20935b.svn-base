-- 为了展示效果 临时添加的功能 并不规范也缺乏考量
local ObserverHost = require "system.observer_host"

local CacheMgr = class("CacheMgr")

CacheMgr:include(ObserverHost)

CacheMgr.AnimaCacheList = {}

CacheMgr.Container = nil


function CacheMgr:init()
    local new_go = GameObject("CacheMgr")
    CacheMgr.Container = new_go.transform

    -- 灵猴
    self:AddAnimaCache("models/Role/pc/linghou/animation/juling_emjc_mskillcast.anim")
    self:AddAnimaCache("models/Role/pc/linghou/animation/juling_fight_attack_01.anim")
    self:AddAnimaCache("models/Role/pc/linghou/animation/juling_fight_attack_02.anim")
    self:AddAnimaCache("models/Role/pc/linghou/animation/juling_lh_mskillcast_01.anim")
    self:AddAnimaCache("models/Role/pc/linghou/animation/juling_lh_mskillcast_02.anim")
    self:AddAnimaCache("models/Role/pc/linghou/animation/juling_pl_mskillcast.anim")
    self:AddAnimaCache("models/Role/pc/linghou/animation/juling_yhzt_mskillcast.anim")

    -- 罗刹
    self:AddAnimaCache("models/Role/pc/luocha/animation/fhly_mskillcast.anim")
    self:AddAnimaCache("models/Role/pc/luocha/animation/fight_attack_01.anim")
    self:AddAnimaCache("models/Role/pc/luocha/animation/fight_attack_02.anim")
    self:AddAnimaCache("models/Role/pc/luocha/animation/hqs_mskillcast.anim")
    self:AddAnimaCache("models/Role/pc/luocha/animation/hqs_mskillsing_a.anim")
    self:AddAnimaCache("models/Role/pc/luocha/animation/hqs_mskillsing_b.anim")
    self:AddAnimaCache("models/Role/pc/luocha/animation/hycj_mskillcast.anim")
    self:AddAnimaCache("models/Role/pc/luocha/animation/jx_mskillcast.anim")
    self:AddAnimaCache("models/Role/pc/luocha/animation/lyfb_mskillcast.anim")
    self:AddAnimaCache("models/Role/pc/luocha/animation/rs_mskillcast.anim")
    self:AddAnimaCache("models/Role/pc/luocha/animation/sx_mskillcast_a.anim")
    self:AddAnimaCache("models/Role/pc/luocha/animation/sx_mskillcast_b.anim")
    self:AddAnimaCache("models/Role/pc/luocha/animation/ybs_mskillcast.anim")


end

function CacheMgr:GetAnimaCache(path)
    --Debug.LogError("尝试获取资源----->"..path)
    local result = CacheMgr.AnimaCacheList[path]
    return result
end

function CacheMgr:AddAnimaCache(path)
    if(CacheMgr.AnimaCacheList[path] ~= nil) then
        return
    end

    self:subscribe(app:getResMgr():rxLoad(path), function(asset_ref)
        local result = asset_ref
        CacheMgr.AnimaCacheList[path] = result
    end)	
end

function CacheMgr:RemoveAnimaCache()
	
end

return CacheMgr
